// src/app/sitemap.ts
import { MetadataRoute } from 'next'
import api from '@/lib/api'
import { getSlugs } from '@/lib/dynamic-utils'; // âœ… IMPORT THE FUNCTION

export default async function sitemap(): Promise<MetadataRoute.Sitemap> {
Â  const baseUrl = 'https://opustools.xyz';

Â  // Existing static tool URLs
Â  const toolUrls = [
Â  Â  '/tools/image-compressor',
Â  Â  '/tools/image-resizer',
Â  Â  '/tools/image-converter',
Â  Â  '/tools/pdf-merger',
Â  Â  '/tools/pdf-splitter',
Â  Â  '/tools/pdf-compressor',
Â  Â  '/tools/pdf-converter',
Â  ];

Â  // Map static tool URLs
Â  const toolEntries: MetadataRoute.Sitemap = toolUrls.map(url => ({
Â  Â  url: `${baseUrl}${url}`,
Â  Â  lastModified: new Date(),
Â  Â  changeFrequency: 'monthly',
Â  Â  priority: 0.8,
Â  }));

Â  // ðŸš€ NEW LOGIC: Generate entries for the 21 dynamic programmatic SEO pages
Â  const dynamicSlugs = getSlugs();

Â  const dynamicResizerEntries: MetadataRoute.Sitemap = dynamicSlugs.map(item => ({
Â  Â  url: `${baseUrl}/tools/image-resizer/${item.slug}`,
Â  Â  lastModified: new Date(),
Â  Â  changeFrequency: 'weekly', // These pages are new and frequently updated
Â  Â  priority: 0.85, // Slightly higher priority to indicate high value
Â  }));

Â  // Existing blog fetching logic
Â  let blogEntries: MetadataRoute.Sitemap = [];
Â  try {
Â  Â  const response = await api.get('/blog/posts/');
Â  Â  const posts = response.data.results;

Â  Â  blogEntries = posts.map((post: any) => ({
Â  Â  Â  url: `${baseUrl}/blog/${post.slug}`,
Â  Â  Â  lastModified: new Date(post.updated_at || post.created_at),
Â  Â  Â  changeFrequency: 'weekly',
Â  Â  Â  priority: 0.7,
Â  Â  }));
Â  } catch (error) {
Â  Â  console.error('Failed to fetch posts for sitemap:', error);
Â  }

Â  return [
Â  Â  {
Â  Â  Â  url: baseUrl,
Â  Â  Â  lastModified: new Date(),
Â  Â  Â  changeFrequency: 'yearly',
Â  Â  Â  priority: 1,
Â  Â  },
Â  Â  {
Â  Â  Â  url: `${baseUrl}/terms`,
Â  Â  Â  lastModified: new Date(),
Â  Â  Â  changeFrequency: 'yearly',
Â  Â  Â  priority: 0.5,
Â  Â  },
Â  Â  {
Â  Â  Â  url: `${baseUrl}/privacy`,
Â  Â  Â  lastModified: new Date(),
Â  Â  Â  changeFrequency: 'yearly',
Â  Â  Â  priority: 0.5,
Â  Â  },
Â  Â  {
Â  Â  Â  url: `${baseUrl}/blog`,
Â  Â  Â  lastModified: new Date(),
Â  Â  Â  changeFrequency: 'daily',
Â  Â  Â  priority: 0.9,
Â  Â  },
Â  Â  ...toolEntries,
Â  Â  ...dynamicResizerEntries, // <-- ALL 21 NEW PAGES ARE INCLUDED HERE
Â  Â  ...blogEntries,
Â  ];
}